name: "CI/CD"

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - '.vscode/**'
      - '.github/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - '.vscode/**'
      - '.github/**'

env:
  PROJECT_PATH: GiftLinkGenerator/GiftLinkGenerator.csproj
  OUTPUT_PATH: GiftLinkGenerator/bin/Release/net8.0
  ARCHIVE_PATH: dist/
  ARCHIVE_PREFIX: AtomicGiftLinkGenerator_

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Initialize Actions
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set Version
        id: "version"
        uses: paulhatch/semantic-version@v5.4.0
        with:
          version_format: "${major}.${minor}.${patch}"
          bump_each_commit: true
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          change_path: ""
          version_from_branch: false

      - name: Initialize .Net
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore Project
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Set assembly version
        id: update
        uses: vers-one/dotnet-project-version-updater@v1.6
        with:
          file: "${{ env.PROJECT_PATH }}"
          version: ${{ steps.version.outputs.version }}

      - name: Build and archive outputs
        run: |
          DIST_DIR="$(pwd)/${{ env.ARCHIVE_PATH }}"
          mkdir $DIST_DIR
          
          # build
          for rid in "win-x64" "win-arm64" "linux-x64" "linux-arm64" "osx-x64" "osx-arm64"
          do
            dotnet build ${{ env.PROJECT_PATH }} --configuration Release --runtime $rid --no-restore
          done

          # zip windows
          for rid in "win-x64" "win-arm64"
          do
            pushd ${{ env.OUTPUT_PATH }}/$rid
            zip -rJ ${DIST_DIR}${{ env.ARCHIVE_PREFIX }}${{ steps.version.outputs.version }}-$rid.zip .
            popd
          done

          # tarball linux and osx
          for rid in "linux-x64" "linux-arm64" "osx-x64" "osx-arm64"
          do
            pushd ${{ env.OUTPUT_PATH }}/$rid
            tar -czvf ${DIST_DIR}${{ env.ARCHIVE_PREFIX }}${{ steps.version.outputs.version }}-$rid.tar.gz .
            popd
          done

      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.version.outputs.version }}
          gh release create "v$VERSION" --title "Release $VERSION" --notes "Automated release."

      - name: Upload Additional Files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "v${{ steps.version.outputs.version }}" "${{ env.ARCHIVE_PATH }}"/*
